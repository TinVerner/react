{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { NEXT_PAGE, PREV_PAGE, ADD_CART_ITEM, UPDATE_CART_ITEM, REMOVE_CART_ITEM, SET_DELIVERY_METHOD, SET_PAYMENT_METHOD, SET_DELIVERY_ADDRESS, CONFIRM_ORDER } from './actions';\nconst currentPageReducer = (state = 1, action) => {\n  switch (action.type) {\n    case NEXT_PAGE:\n      return state + 1;\n    case PREV_PAGE:\n      return state - 1;\n    default:\n      return state;\n  }\n};\nconst cartReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_CART_ITEM:\n      {\n        return state.map(item => item.id === action.payload.id ? {\n          ...item,\n          ...action.payload.data\n        } : item);\n      }\n    case ADD_CART_ITEM:\n      {\n        return [...state, action.payload];\n      }\n    case REMOVE_CART_ITEM:\n      {\n        return state.filter(item => item.id !== action.payload.id);\n      }\n    case CONFIRM_ORDER:\n      return [];\n    default:\n      {\n        return state;\n      }\n  }\n};\nconst deliveryMethodReducer = (state = 'courier', action) => {\n  switch (action.type) {\n    case SET_DELIVERY_METHOD:\n      return action.payload.method;\n    default:\n      return state;\n  }\n};\nconst paymentMethodReducer = (state = 'cash', action) => {\n  switch (action.type) {\n    case SET_PAYMENT_METHOD:\n      return action.payload.method;\n    default:\n      return state;\n  }\n};\nconst deliveryAddressReducer = (state = '', action) => {\n  switch (action.type) {\n    case SET_DELIVERY_ADDRESS:\n      return action.payload.address;\n    default:\n      return state;\n  }\n};\nconst ordersReducer = (state = [], action) => {\n  switch (action.type) {\n    case CONFIRM_ORDER:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  currentPage: currentPageReducer,\n  cart: cartReducer,\n  deliveryMethod: deliveryMethodReducer,\n  paymentMethod: paymentMethodReducer,\n  deliveryAddress: deliveryAddressReducer,\n  orders: ordersReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","NEXT_PAGE","PREV_PAGE","ADD_CART_ITEM","UPDATE_CART_ITEM","REMOVE_CART_ITEM","SET_DELIVERY_METHOD","SET_PAYMENT_METHOD","SET_DELIVERY_ADDRESS","CONFIRM_ORDER","currentPageReducer","state","action","type","cartReducer","map","item","id","payload","data","filter","deliveryMethodReducer","method","paymentMethodReducer","deliveryAddressReducer","address","ordersReducer","rootReducer","currentPage","cart","deliveryMethod","paymentMethod","deliveryAddress","orders"],"sources":["/home/nordiko/Work/react_8/src/redux/reducers.js"],"sourcesContent":["import { combineReducers } from 'redux'\nimport {\n    NEXT_PAGE,\n    PREV_PAGE,\n    ADD_CART_ITEM,\n    UPDATE_CART_ITEM,\n    REMOVE_CART_ITEM,\n    SET_DELIVERY_METHOD,\n    SET_PAYMENT_METHOD,\n    SET_DELIVERY_ADDRESS,\n    CONFIRM_ORDER,\n} from './actions'\n\nconst currentPageReducer = (state = 1, action) => {\n    switch (action.type) {\n        case NEXT_PAGE:\n            return state + 1\n        case PREV_PAGE:\n            return state - 1\n        default:\n            return state\n    }\n}\n\nconst cartReducer = (state = [], action) => {\n    switch (action.type) {\n        case UPDATE_CART_ITEM: {\n            return state.map(item =>\n                item.id === action.payload.id\n                    ? { ...item, ...action.payload.data }\n                    : item\n            )\n        }\n        case ADD_CART_ITEM: {\n            return [...state, action.payload]\n        }\n        case REMOVE_CART_ITEM: {\n            return state.filter(item => item.id !== action.payload.id)\n        }\n        case CONFIRM_ORDER:\n            return []\n        default: {\n            return state\n        }\n    }\n}\n\nconst deliveryMethodReducer = (state = 'courier', action) => {\n    switch (action.type) {\n        case SET_DELIVERY_METHOD:\n            return action.payload.method\n        default:\n            return state\n    }\n}\n\nconst paymentMethodReducer = (state = 'cash', action) => {\n    switch (action.type) {\n        case SET_PAYMENT_METHOD:\n            return action.payload.method\n        default:\n            return state\n    }\n}\n\nconst deliveryAddressReducer = (state = '', action) => {\n    switch (action.type) {\n        case SET_DELIVERY_ADDRESS:\n            return action.payload.address\n        default:\n            return state\n    }\n}\n\nconst ordersReducer = (state = [], action) => {\n    switch (action.type) {\n        case CONFIRM_ORDER:\n            return [...state, action.payload]\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    currentPage: currentPageReducer,\n    cart: cartReducer,\n    deliveryMethod: deliveryMethodReducer,\n    paymentMethod: paymentMethodReducer,\n    deliveryAddress: deliveryAddressReducer,\n    orders: ordersReducer,\n})\n\nexport default rootReducer"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SACIC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,oBAAoB,EACpBC,aAAa,QACV,WAAW;AAElB,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,GAAG,CAAC,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKZ,SAAS;MACV,OAAOU,KAAK,GAAG,CAAC;IACpB,KAAKT,SAAS;MACV,OAAOS,KAAK,GAAG,CAAC;IACpB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,MAAMG,WAAW,GAAGA,CAACH,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EACxC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,gBAAgB;MAAE;QACnB,OAAOO,KAAK,CAACI,GAAG,CAACC,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GACvB;UAAE,GAAGD,IAAI;UAAE,GAAGJ,MAAM,CAACM,OAAO,CAACC;QAAK,CAAC,GACnCH,IACV,CAAC;MACL;IACA,KAAKb,aAAa;MAAE;QAChB,OAAO,CAAC,GAAGQ,KAAK,EAAEC,MAAM,CAACM,OAAO,CAAC;MACrC;IACA,KAAKb,gBAAgB;MAAE;QACnB,OAAOM,KAAK,CAACS,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAC9D;IACA,KAAKR,aAAa;MACd,OAAO,EAAE;IACb;MAAS;QACL,OAAOE,KAAK;MAChB;EACJ;AACJ,CAAC;AAED,MAAMU,qBAAqB,GAAGA,CAACV,KAAK,GAAG,SAAS,EAAEC,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,mBAAmB;MACpB,OAAOM,MAAM,CAACM,OAAO,CAACI,MAAM;IAChC;MACI,OAAOX,KAAK;EACpB;AACJ,CAAC;AAED,MAAMY,oBAAoB,GAAGA,CAACZ,KAAK,GAAG,MAAM,EAAEC,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKN,kBAAkB;MACnB,OAAOK,MAAM,CAACM,OAAO,CAACI,MAAM;IAChC;MACI,OAAOX,KAAK;EACpB;AACJ,CAAC;AAED,MAAMa,sBAAsB,GAAGA,CAACb,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EACnD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKL,oBAAoB;MACrB,OAAOI,MAAM,CAACM,OAAO,CAACO,OAAO;IACjC;MACI,OAAOd,KAAK;EACpB;AACJ,CAAC;AAED,MAAMe,aAAa,GAAGA,CAACf,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,aAAa;MACd,OAAO,CAAC,GAAGE,KAAK,EAAEC,MAAM,CAACM,OAAO,CAAC;IACrC;MACI,OAAOP,KAAK;EACpB;AACJ,CAAC;AAED,MAAMgB,WAAW,GAAG3B,eAAe,CAAC;EAChC4B,WAAW,EAAElB,kBAAkB;EAC/BmB,IAAI,EAAEf,WAAW;EACjBgB,cAAc,EAAET,qBAAqB;EACrCU,aAAa,EAAER,oBAAoB;EACnCS,eAAe,EAAER,sBAAsB;EACvCS,MAAM,EAAEP;AACZ,CAAC,CAAC;AAEF,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}